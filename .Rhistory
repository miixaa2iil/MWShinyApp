load("C:/Users/miixaa2iil/Desktop/Programowanie/R/MWShinyApp/data/initial_data.rda")
myDB = RSQLite::dbConnect(RSQLite::SQLite(), "")
myDB
View(myDB)
app_settings <- function() {
resList <- list(myTable = "musicians_bands",
myDB = RSQLite::dbConnect(RSQLite::SQLite(), ""),
performerType = c("Musician",
"Band"
),
performersType = NULL,
primaryColor = "#0073b7",
secondaryColor = "#00c0ef",
alternateColors = NULL,
groupColors = c("aqua", "green", "orange",
"blue", "olive", "fuchsia",
"lightblue", "lime", "yellow",
"teal", "chartreuse", "blueviolet"),
DTColumns =  c("Performer's type", "Performer's Name", "Cooperation type", "Cooperator's Name", "Created at"),
grColLen = NULL)
resList$performersType <- paste0(resList$performerType , "s")
resList$alternateColors <- unlist(resList[paste0(c("primary", "secondary"), "Color")], use.names = FALSE)
resList$grColLen <- length(resList$groupColors)
return(resList)
}
settings <- app_settings()
settings
settings$myDB$dbname
settings$myDB@dbname
initData
initData <- load("data/initial_data.rda")
export_data(conn = settings$myDB,
my_table = settings$myTable,
data = initData,
initial = TRUE)
export_data <- function(conn, data, my_table, tmp_table = "temp", initial = FALSE){
if(initial){
RSQLite::dbWriteTable(conn, name=my_table, data=data) # to create a table in a database
}else{
RSQLite::dbWriteTable(conn, name=tmp_table, data) # temp table
RSQLite::dbExecute(conn,
paste0("INSERT INTO ",
my_table,
" ",
"SELECT * ",
"FROM ",
tmp_table
)
) #
RSQLite::dbExecute(conn,
paste0(
"ALTER TABLE ",
my_table,
" ",
"ADD COLUMN isDuplicate INT"))
RSQLite::dbExecute(conn,
paste0("UPDATE ",
my_table,
" ",
"SET isDuplicate =(SELECT ROW_NUMBER() OVER(",
"PARTITION BY performerType, performerName, cooperationForm, cooperatorName ",
"ORDER BY performerType, performerName, cooperationForm, cooperatorName) mb ",
"FROM ",
my_table,
")"
))
RSQLite::dbExecute(conn,
paste(
"DELETE FROM ",
my_table,
" ",
"WHERE isDuplicate > 1"
))
RSQLite::dbExecute(conn,
paste0("ALTER TABLE ",
my_table,
" ",
"DROP COLUMN isDuplicate")
)
RSQLite::dbExecute(conn,
paste0("DROP TABLE ",
tmp_table
)) # temp table deletion
}
}
export_data(conn = settings$myDB,
my_table = settings$myTable,
data = initData,
initial = TRUE)
myDB <-  RSQLite::dbConnect(RSQLite::SQLite(), "")
export_data(conn = myDB,
my_table = settings$myTable,
data = initData,
initial = TRUE)
RSQLite::dbWriteTable(myDB, name="moja", data=daframe(A=1))
DBI::dbWriteTable(myDB, name="moja", data=daframe(A=1))
dbWriteTable(myDB, name="moja", data=daframe(A=1))
library(RSQLite)
dbWriteTable(myDB, name="moja", data=daframe(A=1))
DBI::dbWriteTable(myDB, name="moja", data=daframe(A=1))
myDB
dbWriteTable(myDB, name="moja", data=daframe(A=1))
load("C:/Users/miixaa2iil/Desktop/Programowanie/R/MWShinyApp/data/initial_data.rda")
source("C:/Users/miixaa2iil/Desktop/Programowanie/R/MWShinyApp/R/mod_2_retrieve.R")
source("C:/Users/miixaa2iil/Desktop/Programowanie/R/MWShinyApp/R/mod_2_retrieve.R")
